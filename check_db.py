import asyncpg
import asyncio
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DB_HOST = os.getenv("DB_HOST", "localhost")
DB_PORT = int(os.getenv("DB_PORT", "5432"))
DB_USER = os.getenv("DB_USER", "bot_user")
DB_PASSWORD = os.getenv("DB_PASSWORD", "8998")
DB_NAME = os.getenv("DB_NAME", "support_bot")

async def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = await asyncpg.connect(
            host=DB_HOST, port=DB_PORT,
            user=DB_USER, password=DB_PASSWORD,
            database=DB_NAME
        )
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await conn.fetch("SELECT user_id, nickname, is_blocked FROM users ORDER BY user_id")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
        for user in users:
            blocked_status = " üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù" if user.get('is_blocked', False) else ""
            print(f"  ‚Ä¢ {user['nickname']} (ID: {user['user_id']}){blocked_status}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        support_msgs = await conn.fetch("""
            SELECT m.id, m.text, m.message_type, u.nickname 
            FROM messages m 
            JOIN users u ON m.user_id = u.user_id 
            WHERE m.type = 'support' 
            ORDER BY m.id DESC
        """)
        print(f"üíù –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ({len(support_msgs)}):")
        for msg in support_msgs:
            text = msg['text'][:50] + "..." if msg['text'] and len(msg['text']) > 50 else msg['text']
            if msg['message_type'] == 'voice':
                msg_type = "üé§"
                content = text or '[–≥–æ–ª–æ—Å–æ–≤–æ–µ]'
            elif msg['message_type'] == 'video_note':
                msg_type = "üé•"
                content = text or '[–≤–∏–¥–µ–æ –∫—Ä—É–∂–æ–∫]'
            else:
                msg_type = "üìù"
                content = text or '[—Ç–µ–∫—Å—Ç]'
            print(f"  ‚Ä¢ {msg_type} {msg['nickname']}: {content}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–æ–º–æ—â–∏
        help_requests = await conn.fetch("""
            SELECT m.id, m.text, m.message_type, u.nickname 
            FROM messages m 
            JOIN users u ON m.user_id = u.user_id 
            WHERE m.type = 'request' 
            ORDER BY m.id DESC
        """)
        print(f"üÜò –ó–∞–ø—Ä–æ—Å—ã –ø–æ–º–æ—â–∏ ({len(help_requests)}):")
        for req in help_requests:
            text = req['text'][:50] + "..." if req['text'] and len(req['text']) > 50 else req['text']
            if req['message_type'] == 'voice':
                msg_type = "üé§"
                content = text or '[–≥–æ–ª–æ—Å–æ–≤–æ–µ]'
            elif req['message_type'] == 'video_note':
                msg_type = "üé•"
                content = text or '[–≤–∏–¥–µ–æ –∫—Ä—É–∂–æ–∫]'
            else:
                msg_type = "üìù"
                content = text or '[—Ç–µ–∫—Å—Ç]'
            print(f"  ‚Ä¢ {msg_type} {req['nickname']}: {content}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∂–∞–ª–æ–±—ã
        complaints = await conn.fetch("""
            SELECT c.id, c.message_id, c.original_user_id, c.complainer_user_id, c.text, c.message_type, c.complaint_date,
                   u1.nickname as original_nickname, u2.nickname as complainer_nickname
            FROM complaints c
            LEFT JOIN users u1 ON c.original_user_id = u1.user_id
            LEFT JOIN users u2 ON c.complainer_user_id = u2.user_id
            ORDER BY c.complaint_date DESC
        """)
        print(f"üö® –ñ–∞–ª–æ–±—ã ({len(complaints)}):")
        for complaint in complaints:
            text = complaint['text'][:50] + "..." if complaint['text'] and len(complaint['text']) > 50 else complaint['text']
            if complaint['message_type'] == 'voice':
                msg_type = "üé§"
                content = text or '[–≥–æ–ª–æ—Å–æ–≤–æ–µ]'
            elif complaint['message_type'] == 'video_note':
                msg_type = "üé•"
                content = text or '[–≤–∏–¥–µ–æ –∫—Ä—É–∂–æ–∫]'
            else:
                msg_type = "üìù"
                content = text or '[—Ç–µ–∫—Å—Ç]'
            original_nick = complaint['original_nickname'] or f"ID:{complaint['original_user_id']}"
            complainer_nick = complaint['complainer_nickname'] or f"ID:{complaint['complainer_user_id']}"
            print(f"  ‚Ä¢ {msg_type} –æ—Ç {original_nick}, –∂–∞–ª–æ–±–∞ –æ—Ç {complainer_nick}: {content}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç)
        print("üîç –°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–º–æ—â–∏:")
        if help_requests:
            print(f"  ‚Ä¢ –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ: {len(help_requests)}")
            print("  ‚Ä¢ –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–∫–∞–∑–∞–Ω—ã –≤—ã—à–µ")
            print("  ‚Ä¢ ‚ÑπÔ∏è –ó–∞–ø—Ä–æ—Å—ã —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –∂–∞–ª–æ–±—ã")
        else:
            print("  ‚Ä¢ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–º–æ—â–∏")
        
        print()
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∂–∞–ª–æ–± –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        if complaints:
            print()
            complaints_stats = await conn.fetch("""
                SELECT c.original_user_id, u.nickname, COUNT(*) as complaint_count
                FROM complaints c
                LEFT JOIN users u ON c.original_user_id = u.user_id
                GROUP BY c.original_user_id, u.nickname
                ORDER BY complaint_count DESC
            """)
            print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∂–∞–ª–æ–± –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:")
            for stat in complaints_stats:
                nickname = stat['nickname'] or f"ID:{stat['original_user_id']}"
                count = stat['complaint_count']
                if count >= 5:
                    status = "üö´ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π"
                elif count >= 3:
                    status = "üî¥ –≤—ã—Å–æ–∫–∏–π"
                elif count >= 2:
                    status = "‚ö†Ô∏è —Å—Ä–µ–¥–Ω–∏–π"
                else:
                    status = "‚úÖ –Ω–∏–∑–∫–∏–π"
                print(f"  ‚Ä¢ {nickname}: {count} –∂–∞–ª–æ–± ({status})")
        
        print()
        print("=" * 50)
        print(f"üìä –ò—Ç–æ–≥–æ: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, {len(support_msgs)} –ø–æ–¥–¥–µ—Ä–∂–∫–∏, {len(help_requests)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, {len(complaints)} –∂–∞–ª–æ–±")
        
        await conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def main():
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...")
    await check_database()

if __name__ == "__main__":
    asyncio.run(main())
